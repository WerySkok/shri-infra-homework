name: Release a fix version
on: 
  workflow_dispatch:
    inputs:
      release_version:
        description: "Version of the existing release branch"
        required: true

jobs: 
  checks:
    strategy:
      matrix:
        command: [lint, test]  
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ env.RELEASE_VERSION }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build
      - run: npm run ${{ matrix.command }}
  
  release:
    needs: checks
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ env.RELEASE_VERSION }}
          fetch-depth: 0
          fetch-tags: true

      - name: Set git actions user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get last tag
        id: last_tag 
        run: echo "last_tag=$(git describe --tags --abbrev=0 HEAD^)" >> "$GITHUB_OUTPUT"

      - name: Determine fix number
        id: fix_number
        run: |
          {
            regex=".*_fix([0-9]+)"
            # Проверка соответствия регулярному выражению
            if [[ ${{ steps.last_tag.outputs.last_tag }} =~ $regex ]]; then
              # Извлечение числа из тега и увеличение его на 1
              fix_number=${BASH_REMATCH[1]}
              next_fix_number=$((fix_number + 1))
              echo "fix_number=$($next_fix_number)"
            else
              # Если тег не содержит _fix, вывести 1
              echo "fix_number=1"
            fi
          } >> "$GITHUB_OUTPUT"

      - name: Get commit list
        id: commitlist
        run: |
          {
            echo 'commitlist<<EOF'
            git log --pretty=format:'* %h - %s%n' --no-merges ${{ steps.last_tag.outputs.last_tag }}..HEAD
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Update changelog and create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Релиз №${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}" >> temp.md
          echo -e "Дата: $(date)\n" >> temp.md
          echo -e "Релизер: ${{ github.actor }}\n" >> temp.md
          echo -e "Коммиты:\n" >> temp.md
          echo -e "${{ steps.commitlist.outputs.commitlist }}\n" >> temp.md
          echo "Docker Image: cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}" >> temp.md
          gh issue comment $(gh issue list --search "Релиз №${{ env.RELEASE_VERSION }} in:title author:app/github-actions" --json number --jq ".[0].number") --body "$(cat temp.md)"
          echo "" >> temp.md
          cat CHANGELOG.md >> temp.md
          mv temp.md CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "doc(CHANGELOG): update changelog for release ${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}"

      - name: Publish release branch
        run: git push --set-upstream origin releases/${{ env.RELEASE_VERSION }}

      - name: Tag release
        run: |
          git tag v${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}
          git push origin v${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}
          release_name: Релиз ${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}
          draft: false
          prerelease: false

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }} .
          docker tag cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }} cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_latest
      
      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: oauth
          password: ${{ secrets.YANDEX_REGISTRY_OAUTH_TOKEN }}
      
      - name: Push Docker image
        run: |
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_fix${{ steps.fix_number.outputs.fix_number }}
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_latest
      